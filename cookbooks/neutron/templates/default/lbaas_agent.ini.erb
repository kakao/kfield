[DEFAULT]
# Show debugging output in log (sets DEBUG log level output).
debug = <%= node[:openstack][:debug][:neutron] %>

# The LBaaS agent will resync its state with Neutron to recover from any
# transient notification or rpc errors. The interval is number of
# seconds between attempts.
# periodic_interval = 10

# LBaas requires an interface driver be set. Choose the one that best
# matches your plugin.
interface_driver = <%= node[:neutron][:interface_driver] %>

# Example of interface_driver option for OVS based plugins (OVS, Ryu, NEC, NVP,
# BigSwitch/Floodlight)
# interface_driver = neutron.agent.linux.interface.OVSInterfaceDriver

# Use veth for an OVS interface or not.
# Support kernels with limited namespace support
# (e.g. RHEL 6.5) so long as ovs_use_veth is set to True.
ovs_use_veth = <%= node[:neutron][:ovs_use_veth] %>

# Example of interface_driver option for LinuxBridge
# interface_driver = neutron.agent.linux.interface.BridgeInterfaceDriver

# The agent requires drivers to manage the loadbalancer.  HAProxy is the opensource version.
# Multiple device drivers reflecting different service providers could be specified:
# device_driver = path.to.provider1.driver.Driver
# device_driver = path.to.provider2.driver.Driver
# Default is:
device_driver = <%= node[:neutron][:lbaas][:driver_class] %>

[haproxy]
# Location to store config and state files
# loadbalancer_state_path = $state_path/lbaas

# The user group
# user_group = nogroup

<% if node[:neutron][:lbaas][:driver] == 'adx' -%>
[adx]
devices = <%= node[:neutron][:lbaas][:adx_devices].join(',') %>
user = <%= node[:neutron][:lbaas][:adx_user] %>
password = <%= node[:neutron][:lbaas][:adx_password] %>
<% end %>
